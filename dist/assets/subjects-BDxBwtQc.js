import{H as p,k as y,s as a,V as n}from"./index-ClQbt-RO.js";const S=p().slice(0,6),b=y.injectEndpoints({endpoints:s=>({getAllSubjects:s.query({queryFn:async()=>{const{data:t,error:r}=await a.from("subjects").select("*").order("id",{ascending:!0});return r?{error:r}:{data:t}},providesTags:[{type:"subjects",id:"LIST"}]}),getChaptersBySubjectId:s.query({queryFn:async({subjectId:t})=>{const{data:r,error:e}=await a.from("chapters").select("*, subjects(*),teachers(*)").eq("subject_id",t).order("id",{ascending:!0});return e?{error:e}:{data:r}},providesTags:[{type:"chapters",id:"LIST"}]}),getRecordedSessionsBySubjectId:s.query({queryFn:async({subjectId:t})=>{const{data:r,error:e}=await a.from("live_sessions").select("*,subjects(*),teachers(*)").eq("subject_id",t).eq("bought",!0).eq("with_records",!0).lt("end_at",new Date().toISOString()).order("id",{ascending:!0});return e?{error:e}:{data:r}},providesTags:[{type:"live_sessions",id:"LIST"}]}),getLevel:s.query({queryFn:async({levelId:t})=>{const{data:r,error:e}=await a.from("levels").select("level").eq("id",t);return e?{error:e}:{data:r}},providesTags:[{type:"levels",id:"LIST"}]}),getExpirationDate:s.query({queryFn:async({groupeId:t})=>{const{data:r,error:e}=await a.from("live_session_groups").select("expiration_date").eq("id",t);return e?{error:e}:{data:r}},providesTags:[{type:"expiration_date",id:"LIST"}]}),updateFavoriteChapter:s.mutation({queryFn:async({favorite:t,chapterId:r})=>{const{data:e,error:o}=await a.from("chapters").update({favorite:!t}).eq("id",r);return o?{error:o}:{data:e}},invalidatesTags:[{type:"chapters",id:"LIST"}]}),updateFavoriteRecordedSession:s.mutation({queryFn:async({favorite:t,sessionId:r})=>{const{data:e,error:o}=await a.from("live_sessions").update({favorite:!t}).eq("id",r);return o?{error:o}:{data:e}},invalidatesTags:[{type:"live_sessions",id:"LIST"}]}),updateFavoriteSubject:s.mutation({queryFn:async({favorite:t,subjectId:r})=>{const{data:e,error:o}=await a.from("subjects").update({favorite:!t}).eq("id",r);return o?{error:o}:{data:e}},invalidatesTags:[{type:"subject",id:"LIST"},{type:"subjects",id:"LIST"}]}),getSubjectById:s.query({queryFn:async({subjectId:t})=>{const{data:r,error:e}=await a.from("subjects").select("favorite,bought,subject_name,expiration_date").eq("id",t);return e?{error:e}:{data:r}},providesTags:[{type:"subject",id:"LIST"}]}),buySubject:s.mutation({queryFn:async({subjectId:t,updatedPoints:r})=>{const{data:e,error:o}=await a.from("subjects").update({bought:!0,expiration_date:new Date(Date.now()+2592e6)}).eq("id",t);if(o)throw n.error("You don't have enough points to buy this subject"),error;n.success("Successfully bought the subject");const{data:d,error:i}=await a.from("wallet").update({points:r}).eq("id",1);if(i)return{updatedWalletError:i};const{data:c,error:u}=await a.from("chapters").update({bought_indiv:!0,expiration_date:new Date(Date.now()+30*24*60*60*1e3)}).eq("subject_id",t);return u?{updatedChaptersError:u}:(await a.from("subscription_history").insert([{code:`#${S}`,amount_in_dinar:5,refund:0,date:new Date().toISOString()}]),{data:{boughtSubject:e,updatedWallet:d,updatedChapters:c}})},invalidatesTags:[{type:"subjects",id:"LIST"},{type:"points",id:"LIST"},{type:"chapters",id:"LIST"},{type:"subscription",id:"LIST"}]})})}),{useGetAllSubjectsQuery:v,useGetChaptersBySubjectIdQuery:j,useGetRecordedSessionsBySubjectIdQuery:g,useGetLevelQuery:h,useGetExpirationDateQuery:q,useUpdateFavoriteChapterMutation:l,useUpdateFavoriteRecordedSessionMutation:T,useUpdateFavoriteSubjectMutation:w,useGetSubjectByIdQuery:I,useBuySubjectMutation:m}=b;export{w as a,j as b,g as c,I as d,h as e,m as f,l as g,q as h,T as i,v as u};
